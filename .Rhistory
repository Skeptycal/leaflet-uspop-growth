# sudo apt-get install libjq-dev
# sudo apt-get install libudunits2-dev
# sudo apt-get install libv8-3.14-dev
# sudo add-apt-repository -y ppa:ubuntugis/ppa
# sudo apt update
# sudo apt upgrade # if you already have gdal installed
# sudo apt install gdal-bin # if you don't have gdal installed
library(geojsonio)
#library(install.load)
library(dplyr)
library(geojsonio)
library(geojsonio)
install.packages("sf")
# load in the csv
pop.estimates <- read.csv("nst-est2017-popchg2010_2017.csv", stringsAsFactors = FALSE)
# create a column of the population growth in 2017 versus 2010
pop.estimates$difference <- pop.estimates$POPESTIMATE2010 - pop.estimates$POPESTIMATE2017
# create a column of the population growth in 2017 versus 2010
pop.estimates$difference <- pop.estimates$POPESTIMATE2017 - pop.estimates$POPESTIMATE2010
pop.estimates$percentagegrowth <- pop.estimates$POPESTIMATE2017 / pop.estimates$POPESTIMATE2010
library(geojsonio)
library(downloader)
library(leaflet)
library(maptools)
library(geojsonio)
library(sf)
install.packages("sf")
library(sf)
# drop the information for overall United States and Regions (we only want states)
pop.estimates <- pop.estimates %>%
filter(STATE != 0)
library(sf)
# library(sf)
library(geojsonio)
# use geojsonio to load the spatial data into sp objects
states <- geojsonio::geojson_read("gz_2010_us_040_00_500k.json", what= "sp")
install.packages("geojsonio")
install.packages("geojsonio")
knitr::opts_chunk$set(echo = TRUE)
#library(install.load)
library(dplyr)
# GeoJsonIO has many system dependencies which have to be handled outside of R. Here are the bash commands I had to run on my system to get it to work (Ubuntu 16.04)
# ----Ubuntu-----
# sudo apt install protobuf-compiler
# sudo add-apt-repository -y ppa:opencpu/jq
# sudo apt-get update
# sudo apt-get install libjq-dev
# sudo apt-get install libudunits2-dev
# sudo apt-get install libv8-3.14-dev
# sudo add-apt-repository -y ppa:ubuntugis/ppa
# sudo apt update
# sudo apt upgrade # if you already have gdal installed
# sudo apt install gdal-bin # if you don't have gdal installed
# library(sf)
library(geojsonio)
library(downloader)
library(leaflet)
library(maptools)
# load in the csv
pop.estimates <- read.csv("nst-est2017-popchg2010_2017.csv", stringsAsFactors = FALSE)
# create a column of the population growth in 2017 versus 2010
pop.estimates$difference <- pop.estimates$POPESTIMATE2017 - pop.estimates$POPESTIMATE2010
pop.estimates$percentagegrowth <- pop.estimates$POPESTIMATE2017 / pop.estimates$POPESTIMATE2010
# drop the information for overall United States and Regions (we only want states)
pop.estimates <- pop.estimates %>%
filter(STATE != 0)
# use geojsonio to load the spatial data into sp objects
states <- geojsonio::geojson_read("gz_2010_us_040_00_500k.json", what= "sp")
SpatialPolygonsDataFrame(states)
SpatialPolygonsDataFrame(states@data)
SpatialPolygonsDataFrame(states@data)
SpatialPolygonsDataFrame(states@data)
View(states)
View(states)
?merge
# Add a new column to the SpatialPolygonsDataFrame@data with our data of interest
scary <- base::merge(pop.estimates, states, by="NAME", sort=FALSE)
scary
head(scary)
head(scary, 3)
class(scary)
# Add a new column to the SpatialPolygonsDataFrame@data with our data of interest
states.df <- base::merge(states, pop.estimates, by="NAME", sort=FALSE)
head(states.df)
# use geojsonio to load the spatial data into sp objects
states <- geojsonio::geojson_read("gz_2010_us_040_00_500k.json", what= "sp")
SpatialPolygonsDataFrame(states@data)
# Add a new column to the SpatialPolygonsDataFrame@data with our data of interest
states.df <- base::merge(states@data, pop.estimates, by="NAME", sort=FALSE)
head(states.df)
knitr::opts_chunk$set(echo = TRUE)
#library(install.load)
library(dplyr)
# GeoJsonIO has many system dependencies which have to be handled outside of R. Here are the bash commands I had to run on my system to get it to work (Ubuntu 16.04)
# ----Ubuntu-----
# sudo apt install protobuf-compiler
# sudo add-apt-repository -y ppa:opencpu/jq
# sudo apt-get update
# sudo apt-get install libjq-dev
# sudo apt-get install libudunits2-dev
# sudo apt-get install libv8-3.14-dev
# sudo add-apt-repository -y ppa:ubuntugis/ppa
# sudo apt update
# sudo apt upgrade # if you already have gdal installed
# sudo apt install gdal-bin # if you don't have gdal installed
# library(sf)
library(geojsonio)
library(downloader)
library(leaflet)
library(maptools)
# load in the csv
pop.estimates <- read.csv("nst-est2017-popchg2010_2017.csv", stringsAsFactors = FALSE)
# create a column of the population growth in 2017 versus 2010
pop.estimates$difference <- pop.estimates$POPESTIMATE2017 - pop.estimates$POPESTIMATE2010
pop.estimates$percentagegrowth <- pop.estimates$POPESTIMATE2017 / pop.estimates$POPESTIMATE2010
# drop the information for overall United States and Regions (we only want states)
pop.estimates <- pop.estimates %>%
filter(STATE != 0)
# download the .json and save it
# u <- "enter url here"
# downloader::download(url = u, destfile="us-states.geojson")
# use geojsonio to load the spatial data into sp objects
states <- geojsonio::geojson_read("gz_2010_us_040_00_500k.json", what= "sp")
SpatialPolygonsDataFrame(states@data)
# Add a new column to the SpatialPolygonsDataFrame@data with our data of interest
states@data <- base::merge(states@data, pop.estimates, by="NAME", sort=FALSE)
head(states.df)
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
m <- leaflet(states) %>%
addTiles()
m
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
m <- leaflet(states) %>%
addTiles("Stamen.Watercolor")
m
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("Stamen.Watercolor")
m
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
# why is -96 negative? because we're west of the Prime Meridian
# what zoom would you use to look at a city?
m <- leaflet(states) %>%
setView(-96, 37.8, 10) %>% # set long, lat, zoom-in by factor of 4
addTiles("Stamen.Watercolor")
m
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
# why is -96 negative? because we're west of the Prime Meridian
# what zoom would you use to look at a city?
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>% # set long, lat, zoom-in by factor of 4
addTiles("Stamen.Watercolor")
m
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
# why is -96 negative? because we're west of the Prime Meridian
# what zoom would you use to look at a city?
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>% # set long, lat, zoom-in by factor of 4
addTiles("Stamen.Watercolor")
m
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
# why is -96 negative? because we're west of the Prime Meridian
# what zoom would you use to look at a city?
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>% # set long, lat, zoom-in by factor of 4
addProviderTiles("Stamen.Watercolor")
m
m %>% addPolygons()
bins <-
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
?colorBin
seq(1,52)
bins <- seq(1,52)
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
bins <- c(0, 1, Inf)
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
names(states)
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3",
fillOpacity = 0.7
)
withcolor
withcolor <- m %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
withcolor <- m %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
color = "white",
dashArray = "3", # make the borders dashes
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor <- m %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3", # make the borders dashes
fillOpacity = 0.7
)
withcolor
withcolor <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
states@data$PPOPCHG_2010
knitr::opts_chunk$set(echo = TRUE)
#library(install.load)
library(dplyr)
# GeoJsonIO has many system dependencies which have to be handled outside of R. Here are the bash commands I had to run on my system to get it to work (Ubuntu 16.04)
# ----Ubuntu-----
# sudo apt install protobuf-compiler
# sudo add-apt-repository -y ppa:opencpu/jq
# sudo apt-get update
# sudo apt-get install libjq-dev
# sudo apt-get install libudunits2-dev
# sudo apt-get install libv8-3.14-dev
# sudo add-apt-repository -y ppa:ubuntugis/ppa
# sudo apt update
# sudo apt upgrade # if you already have gdal installed
# sudo apt install gdal-bin # if you don't have gdal installed
# library(sf)
library(geojsonio)
library(downloader)
library(leaflet)
library(maptools)
# load in the csv
pop.estimates <- read.csv("nst-est2017-popchg2010_2017.csv", stringsAsFactors = FALSE)
# create a column of the population growth in 2017 versus 2010
pop.estimates$difference <- pop.estimates$POPESTIMATE2017 - pop.estimates$POPESTIMATE2010
pop.estimates$percentagegrowth <- pop.estimates$POPESTIMATE2017 / pop.estimates$POPESTIMATE2010
# drop the information for overall United States and Regions (we only want states)
pop.estimates <- pop.estimates %>%
filter(STATE != 0)
# download the .json and save it
# u <- "enter url here"
# downloader::download(url = u, destfile="us-states.geojson")
# use geojsonio to load the spatial data into sp objects
states <- geojsonio::geojson_read("gz_2010_us_040_00_500k.json", what= "sp")
# SpatialPolygonsDataFrame(states@data)
# Add a new column to the SpatialPolygonsDataFrame@data with our data of interest
states@data <- base::merge(states@data, pop.estimates %>%
select(NAME, percentagegrowth)
, by="NAME", sort=FALSE)
# states@data <- merge(states@data, pop.change %>% select(NAME, percentagegrowth), by = "NAME", sort = FALSE)
head(states.df)
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
# why is -96 negative? because we're west of the Prime Meridian
# what zoom would you use to look at a city?
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>% # set long, lat, zoom-in by factor of 4
addProviderTiles("Stamen.Watercolor")
m
m %>% addPolygons()
bins <- c(0, 1, Inf)
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3", # make the borders dashes
fillOpacity = 0.7
)
withcolor
withcolor <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
labels <-
hovering <-m %>%
addPolygons(
# Add code here
)
hovering %>% # what about the legend?
knitr::opts_chunk$set(echo = TRUE)
#library(install.load)
library(dplyr)
# GeoJsonIO has many system dependencies which have to be handled outside of R. Here are the bash commands I had to run on my system to get it to work (Ubuntu 16.04)
# ----Ubuntu-----
# sudo apt install protobuf-compiler
# sudo add-apt-repository -y ppa:opencpu/jq
# sudo apt-get update
# sudo apt-get install libjq-dev
# sudo apt-get install libudunits2-dev
# sudo apt-get install libv8-3.14-dev
# sudo add-apt-repository -y ppa:ubuntugis/ppa
# sudo apt update
# sudo apt upgrade # if you already have gdal installed
# sudo apt install gdal-bin # if you don't have gdal installed
# library(sf)
library(geojsonio)
library(downloader)
library(leaflet)
library(maptools)
# load in the csv
pop.estimates <- read.csv("nst-est2017-popchg2010_2017.csv", stringsAsFactors = FALSE)
# create a column of the population growth in 2017 versus 2010
pop.estimates$difference <- pop.estimates$POPESTIMATE2017 - pop.estimates$POPESTIMATE2010
pop.estimates$percentagegrowth <- pop.estimates$POPESTIMATE2017 / pop.estimates$POPESTIMATE2010
# drop the information for overall United States and Regions (we only want states)
pop.estimates <- pop.estimates %>%
filter(STATE != 0)
# download the .json and save it
# u <- "enter url here"
# downloader::download(url = u, destfile="us-states.geojson")
# use geojsonio to load the spatial data into sp objects
states <- geojsonio::geojson_read("gz_2010_us_040_00_500k.json", what= "sp")
# SpatialPolygonsDataFrame(states@data)
# Add a new column to the SpatialPolygonsDataFrame@data with our data of interest
states@data <- base::merge(states@data, pop.estimates %>%
select(NAME, percentagegrowth)
, by="NAME", sort=FALSE)
# states@data <- merge(states@data, pop.change %>% select(NAME, percentagegrowth), by = "NAME", sort = FALSE)
head(states.df)
# provide leaflet with the SpatialPolygonsDataFrame
# set the view to the contiguous United States
# set what the background map should look like.
#addTiles() # basic
#addProviderTiles("Stamen.Watercolor") #FUN
# why is -96 negative? because we're west of the Prime Meridian
# what zoom would you use to look at a city?
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>% # set long, lat, zoom-in by factor of 4
addProviderTiles("Stamen.Watercolor")
m
m %>% addPolygons()
states@data$percentagegrowth
hist(states@data$percentagegrowth)
bins <- seq(0.85,1.15, 0.15)
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3", # make the borders dashes
fillOpacity = 0.7
)
withcolor
withcolor <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
bins
bins <- seq(0.85,1.15, 0.10)
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3", # make the borders dashes
fillOpacity = 0.7
)
withcolor
withcolor <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
bins <- seq(0.85,1.15, 0.05)
pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3", # make the borders dashes
fillOpacity = 0.7
)
withcolor
withcolor <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
?colorBin
bins <- seq(0.85,1.15, 0.05)
# pal <- colorBin("YlOrRd", domain = "column to color by", bins = bins)
pal <- colorBin("Blues", domain = "column to color by", bins = bins)
withcolor <- m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3", # make the borders dashes
fillOpacity = 0.7
)
withcolor
withcolor <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withcolor
labels <-
hovering <-m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.5,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
)
)
hovering %>% # what about the legend?
hovering  # what about the legend?
withlabel <- withcolor %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title = "Population Growth Since 2010",
position = "bottomright"
)
withlabel
